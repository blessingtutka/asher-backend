// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  EMPLOYER
  WORKER
}

enum EmpType {
  PERSON
  ORGANISATION
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  TEMPORARY
  INTERN
}

enum JobStatus {
  OPEN
  CLOSE
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  lastLogin DateTime?
  fullName  String
  role      Role
  employers Employer[]
  workers   Worker[]
}

model Employer {
  id          String  @id @default(cuid())
  userId      String  @unique
  profile     String?
  name        String?
  description String?
  type        EmpType?
  bio         String?
  activity    String?
  address     String?
  telephone   String?
  user        User    @relation(fields: [userId], references: [id])
  jobs        Job[]
}

model Worker {
  id          String      @id @default(cuid())
  userId      String      @unique
  profile     String?
  firstName   String?
  lastName    String?
  bio         String?
  title       String?
  cvFile      String?
  activity    String?
  address     String?
  telephone   String?
  user        User        @relation(fields: [userId], references: [id])
  experiences WorkerExperience[]
  applications Application[]
}

model Job {
  id           String     @id @default(cuid())
  posterId     String
  title        String
  description  String?
  localisation String?
  salary       String?
  jobType      JobType?
  status       JobStatus @default(OPEN)
  employer     Employer @relation(fields: [posterId], references: [id])
  applications Application[]
}

model WorkerExperience {
  id          String    @id @default(cuid())
  workerId    String
  title       String
  description String?
  percentage  Int
  worker      Worker @relation(fields: [workerId], references: [id])
}

model Application {
  id        String     @id @default(cuid())
  jobId     String
  workerId  String
  status    ApplicationStatus @default(PENDING)
  date      DateTime @default(now())
  link      String?
  cv        String?
  motivation String?
  job       Job     @relation(fields: [jobId], references: [id])
  worker    Worker  @relation(fields: [workerId], references: [id])
}


